name: "Lint, scan, test and deploy"

on: [push]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read
  # Needed for the 'trilom/file-changes-action' action
  pull-requests: read

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: "${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
  cancel-in-progress: true


jobs:
  ci-steps:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: TruffleHog secrets scanning
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified
      
      - name: install nodejs
        uses: actions/setup-node@v1
        with:
          node-version: 14.x          

      # - name: setup nodejs
      #   uses: actions/setup-nodejs@v2.5.2
      #   with:
      #     node-version: '18.x'
      #     registry-url: "https://registry.npmjs.org"
      #     # cache: npm

      - name: install deps
#        working-directory: 01-notebook
        run: |
          npm i

#      - name: run linting
#        working-directory: 01-notebook
#        run: |
#          npm run lint

      - name: fix dependencies
#        working-directory: 01-notebook
        run: |
          npm audit fix

  pulumi:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: eu-west-2
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node LTS
        uses: actions/setup-nodejs@v3
        with:
          node-version: lts/*
          cache: yarn

      - name: Installing dependencies
        run: yarn install

      - name: Applying infrastructure
        uses: pulumi/actions@v4
        with:
          work-dir: pulumi
          command: up
          stack-name: test
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

      - run: echo "üçè This job's status is ${{ job.status }}."
